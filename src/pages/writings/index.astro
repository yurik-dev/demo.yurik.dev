---
import { getCollection } from 'astro:content';

import BackBtn from '@components/BackBtn.astro';
import Layout from '@layouts/Layout.astro';

import Link from '@components/Link.astro';
import { WRITINGS } from '@consts';

import { formatDate } from '@lib/utils';

const highlights = (await getCollection('writings'))
  .filter((highlight) => !highlight.data.isDraft)
  .sort((a, b) => b.data.publishedDate.valueOf() - a.data.publishedDate.valueOf())
  .slice(0, 3);

const others = (await getCollection('writings'))
  .filter((other) => !other.data.isDraft)
  .sort((a, b) => b.data.publishedDate.valueOf() - a.data.publishedDate.valueOf())
  .slice(3);
---

<Layout title={WRITINGS.TITLE} description={WRITINGS.DESCRIPTION}>
  <BackBtn />
  <h1 class='p-12 text-center text-5xl opacity-80'>Writing</h1>

  <div class='flex flex-col items-center font-inter'>
    {
      highlights.map((highlight, index) =>
        index % 2 === 0 ? (
          <Link entry={highlight}>
            <div class='flex h-full flex-col items-center justify-center gap-4 p-8 md:max-w-5xl md:flex-row md:gap-20'>
              <div class='order-2 flex flex-col gap-4 text-left md:order-1 md:flex-1 md:gap-12 md:text-right'>
                <p class='text-sm font-normal tracking-tight opacity-60 dark:text-grey-custom'>
                  {formatDate(highlight.data.publishedDate)}
                </p>
                <h1 class='text-3xl font-medium sm:text-5xl'>{highlight.data.title}</h1>
                <h2 class='pb-4 tracking-tight opacity-90 dark:text-grey-custom'>{highlight.data.description}</h2>
              </div>
              <div class='order-3 h-0 border-none opacity-20 md:order-2 md:h-96 md:border-l md:border-dashed' />
              <div class='md: order-1 flex-1 py-12 md:order-3'>
                <img
                  src={highlight.data.coverImg.url}
                  class='aspect-square w-fit rounded-full object-cover dark:opacity-80'
                  alt={highlight.data.coverImg.alt}
                />
              </div>
            </div>
            <div class='border-b border-dashed opacity-20' />
          </Link>
        ) : (
          <Link entry={highlight}>
            <div class='flex h-full flex-col items-center justify-center gap-4 p-8 md:max-w-5xl md:flex-row md:gap-20'>
              <div class='order-2 flex flex-col gap-4 text-left md:order-3 md:flex-1 md:gap-12 md:text-left'>
                <p class='text-sm font-normal tracking-tight opacity-60 dark:text-grey-custom'>
                  {formatDate(highlight.data.publishedDate)}
                </p>
                <h1 class='text-3xl font-medium sm:text-5xl'>{highlight.data.title}</h1>
                <h2 class='pb-4 tracking-tight opacity-90 dark:text-grey-custom'>{highlight.data.description}</h2>
              </div>
              <div class='order-3 h-0 opacity-20 md:order-2 md:h-96 md:border-l md:border-dashed' />
              <div class='order-1 py-12 md:order-1 md:flex-1'>
                <img
                  src={highlight.data.coverImg.url}
                  class='aspect-square w-fit rounded-full object-cover dark:opacity-80'
                  alt={highlight.data.coverImg.alt}
                />
              </div>
            </div>
            <div class='border-b border-dashed opacity-20' />
          </Link>
        ),
      )
    }
  </div>

  <div class="flex justify-center">
    <div class='flex w-full md:max-w-screen-md flex-col gap-6 py-12 px-6 md:px-0'>
      {
        others.map((other) => (
          <Link entry={other}>
            <div class='flex w-full justify-between flex-row gap-12'>
              <p class="font-inter opacity-80">{other.data.title}</p>
              <p class="opacity-80 text-grey-custom">{formatDate(other.data.publishedDate).slice(0, 5)}</p>
            </div>
          </Link>
        ))
      }
    </div>
  </div>
</Layout>
